# This is a basic workflow to help you get started with Actions

name: CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  REPOSITORY: ${{ github.repository }}
  FRONTEND_IMAGE_NAME: se-5g00dm04/shoppinglist-frontend:latest
  BACKEND_IMAGE_NAME: se-5g00dm04/shoppinglist-backend:latest

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This is the test job
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Fetch code
        uses: actions/checkout@v3

      # Install node LTS version
      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Install the dependencies for the frontend
      - name: Install frontend dependecies
        working-directory: ./frontend
        run: npm install

      # Test the frontend code
      - name: Testing frontend project
        working-directory: ./frontend
        run: npm run test:ci

      # Install the dependencies for the backend
      - name: Install backend dependecies
        working-directory: ./backend
        run: npm install

      # Test the backend code
      - name: Testing backend project
        working-directory: ./backend
        run: npm run lint && npm run test

    
  build:
      runs-on: ubuntu-latest
      # Test job needs to succeed
      needs: test
      # Give the job permission to write packages to the registry
      permissions:
        contents: read
        packages: write
      steps:
        # Fetch the code using the checkout action
        - name: Fetch Code
          uses: actions/checkout@v3
        # Installing the node modules for the frontend
        - name: Install Node
          uses: actions/setup-node@v3
          with:
            node-version: "18"
        # Setting up the Docker build environment
        - name: Set up QEMU
          uses: docker/setup-qemu-action@v3
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
        # Loggin into the GitHub container registry
        - name: Docker Login
          uses: docker/login-action@v3.0.0
          with:
            # The GitHub registry
            registry: ${{ env.REGISTRY }}
            # The person that triggered the build
            username: ${{ github.actor }}
            # A special GitHub secret token we can use
            password: ${{ secrets.GITHUB_TOKEN }}
        # Building and pushing the frontend image to the registry using an action
        - name: Build and push Docker Frontend images
          uses: docker/build-push-action@v5.0.0
          with:
            context: ./frontend
            file: DockerfileServer
            push: true
            tags: "${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}"
        # Building and pushing the backend image to the registry using an action
        - name: Build and push Docker Backend images
          uses: docker/build-push-action@v5.0.0
          with:
            context: ./backend
            file: DockerfileServer
            push: true
            tags: "${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}"

  
